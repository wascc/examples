# Replace "MODULE" with the uppercase name of the module
# Replace "module" with the lowercase name of the module
# Replace "workingdir" with the folder name of the module in this repository
# Replace "MODNAME" with the human-readable module name
name: MODULE-RELEASE

on:
  push:
    tags:
    - 'module-v*'

env:
  CARGO_TERM_COLOR: always
  working-directory: ./workingdir
  DESTINATION: target/wasm32-unknown-unknown/release/module_s.wasm
  WASH_ISSUER_KEY: ${{ secrets.WASMCLOUD_ACCOUNT_OFFICIAL }}
  WASH_SUBJECT_KEY: ${{ secrets.WASMCLOUD_MODULE }}
  WASH_REG_USER:  ${{ secrets.AZURECR_PUSH_USER }}
  WASH_REG_PASSWORD:  ${{ secrets.AZURECR_PUSH_PASSWORD }}
  REVISION: ${{ github.run_number }}

jobs:
  cargo_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Add wasm32-unknown-unknown
      run: rustup target add wasm32-unknown-unknown
    - name: Build
      run: cargo build --verbose
      working-directory: ${{ env.working-directory }}
    - name: Run tests
      run: cargo test --bins --verbose
      working-directory: ${{ env.working-directory }}
    - name: Check fmt
      run: cargo fmt -- --check
      working-directory: ${{ env.working-directory }}

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup component add clippy
      - name: Add wasm32-unknown-unknown
        run: rustup target add wasm32-unknown-unknown
      - name: Run cargo clippy
        run: cargo clippy --all-features
        working-directory: ${{ env.working-directory }}

  github_release:
    needs: [cargo_check, clippy_check]
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

  artifact_release:
    needs: github_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          curl -s https://packagecloud.io/install/repositories/wasmCloud/core/script.deb.sh | sudo bash
          sudo apt install wash
      - name: Add wasm32-unknown-unknown
        run: rustup target add wasm32-unknown-unknown
      - name: Build
        run: cargo build --release
        working-directory: ${{ env.working-directory }}
      - name: Wash Sign Claim
        run: |
          VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].version')
          #TODO: SIGN WITH GOOD CAPABILITIES AND CHANGE NAME
          wash claims sign target/wasm32-unknown-unknown/release/module.wasm --disable-keygen --name "MODNAME" --ver $VERSION --rev ${{ env.REVISION }}
        working-directory: ${{ env.working-directory }}
      # Push artifact to https://AZURECR/module:VERSION
      - name: push-artifact
        run: |
          VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].version')
          URL=${{secrets.AZURECR_PUSH_URL}}/module:$VERSION
          wash reg push $URL ${{ env.DESTINATION }}
        working-directory: ${{ env.working-directory }}
